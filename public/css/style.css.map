{"version":3,"file":"css/style.css","mappings":"AAEA,WACE,sBACA,oGACA,gBACA,kBAEF,WACE,sBACA,4FACA,gBACA,kBAEF,WACE,qBACA,wDACA,gBACA,kBAEF,WACE,qBACA,yDACA,gBACA,kBCxBF,KACE,gBACA,gCACA,gBACA,OACE,sBAEJ,MACE,YACA,aACA,uBACA,mBC2iBE,yBD/iBJ,MAMI,aAEJ,MACE,YEhBF,eACE,4BACA,iBACA,mBACA,UCGM,CF+iBJ,yBCtjBJ,eAMI,kBDgjBA,yBCtjBJ,eAQI,iBACA,kBAEJ,YACE,iBACA,mBDyiBE,yBC3iBJ,YAII,iBACA,oBAEJ,SACE,kBEnBF,eACE,kBACA,SACA,UACA,aACA,cAEA,uBACA,2BACA,eAGF,oBACE,cACA,kBACA,aACA,WACA,eDXM,CCYN,UACA,OACA,uBACA,4BAEF,iCACE,MAEF,kEACE,QAEF,iCACE,SAGF,sCACE,SACA,QACA,SAGF,sCAEE,wBAGF,sCAEE,yBAGF,sCACE,SACA,QACA,SCpDF,WACE,kBACA,aACA,aACA,aACA,aACA,iBJgjBE,0BItjBJ,WAQI,YACA,cJ6iBA,yBItjBJ,WAWI,YACA,cJ0iBA,yBItjBJ,WAcI,WACA,aACA,gBACA,uBACA,oBClBJ,UACE,kBACA,aACA,wBACA,cACA,YACA,aACA,4BACA,wBHRK,CGSL,UHHM,CGIN,gBL4iBE,0BKtjBJ,UAYI,aACA,aACA,aLwiBA,yBKtjBJ,UAgBI,aACA,aLqiBA,yBKtjBJ,UAmBI,aACA,aAGJ,oBACE,kBACA,MACA,OACA,SACA,QACA,UACA,wBH9BK,CGgCP,iBACE,kBACA,MACA,OACA,aACA,YACA,qBACA,kEACA,oDACA,kEACA,gEAEF,uBACE,aACA,YACA,sCACA,iFAEF,iCACE,GACE,UACA,qBACF,IACE,UACF,IACE,oBACF,KACE,qBATJ,yBACE,GACE,UACA,qBACF,IACE,UACF,IACE,oBACF,KACE,qBAEJ,KACE,UAEF,WC/DE,eACA,SACA,gBD+DA,uBACA,gBLmfE,0BKtfJ,WAKI,gBLifA,yBKtfJ,WAOI,kBACA,UACA,SACA,gBACA,yBAEF,iBACE,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","sources":["webpack:///./src/sass/_fonts.sass","webpack:///./src/sass/_global.sass","webpack:///./src/sass/vendor/_include-media.scss","webpack:///./src/sass/_typography.sass","webpack:///./src/sass/_variables.sass","webpack:///./src/sass/blocks/_navicon.sass","webpack:///./src/sass/blocks/_wrap.sass","webpack:///./src/sass/blocks/_nav.sass","webpack:///./src/sass/_mixins.sass","webpack:///./src/sass/blocks/_about-me.sass","webpack:///./src/sass/blocks/_main.sass","webpack:///./src/sass/blocks/_slider.sass","webpack:///./node_modules/swiper/swiper.min.css","webpack:///./node_modules/swiper/modules/navigation/navigation.min.css","webpack:///./node_modules/swiper/modules/effect-fade/effect-fade.min.css"],"sourcesContent":["$font_path: 'public/fonts/'\r\n\r\n@font-face\r\n  font-family: 'PT Mono'\r\n  src: url(\"../fonts/ptmonobold.woff2\") format(\"woff2\"), url(\"../fonts/ptmonobold.woff\") format(\"woff\")\r\n  font-weight: 600\r\n  font-style: normal\r\n\r\n@font-face\r\n  font-family: 'PT Mono'\r\n  src: url(\"../fonts/ptmono.woff2\") format(\"woff2\"), url(\"../fonts/ptmono.woff\") format(\"woff\")\r\n  font-weight: 400\r\n  font-style: normal\r\n\r\n@font-face\r\n  font-family: 'Roboto'\r\n  src: url(\"../fonts/Roboto-Italic.woff2\") format(\"woff2\")\r\n  font-weight: 400\r\n  font-style: italic\r\n\r\n@font-face\r\n  font-family: 'Roboto'\r\n  src: url(\"../fonts/Roboto-Regular.woff2\") format(\"woff2\")\r\n  font-weight: 400\r\n  font-style: normal\r\n","html\r\n  font-size: 62.5%\r\n  font-family: \"Roboto\", sans-serif\r\n  font-weight: 400\r\n  *\r\n    box-sizing: border-box\r\n\r\n#root\r\n  height: 98vh\r\n  display: flex\r\n  justify-content: center\r\n  align-items: center\r\n  @include media(\"<tablet\")\r\n    height: 90vh\r\n\r\n.logo\r\n  margin: 15px\r\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 321px,\n  'tiny': 400px,\n  'tablet': 720px,\n  'desktop': 960px,\n  'large': 1240px,\n  'huge': 1440px,\n  'huger': 1650px,\n  'xl': 1800px,\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".section-title\r\n  font-family: \"PT Mono\", serif\r\n  font-size: 4.4rem\r\n  line-height: 4.4rem\r\n  color: $black\r\n  @include media(\"<desktop\")\r\n    font-size: 3.4rem\r\n  @include media(\"<tablet\")\r\n    font-size: 2.2rem\r\n    line-height: 3rem\r\n\r\n.main__text\r\n  font-size: 1.6rem\r\n  line-height: 2.2rem\r\n  @include media(\"<desktop\")\r\n    font-size: 1.2rem\r\n    line-height: 1.8rem\r\n\r\n.italics\r\n  font-style: italic\r\n\r\n","$webd: #1BBD5C\r\n$graphd: #1E9FD7\r\n$print: #1C43D0\r\n$branding: #B41DDA\r\n$ui: #DC186A\r\n\r\n$white: #ffffff\r\n$black: #000000\r\n$text: #1A1A1A\r\n$bg: #F5F5F5\r\n\r\n$transition: 300ms\r\n","#nav__mob-icon\r\n  position: absolute\r\n  top: 10px\r\n  right: 7px\r\n  width: 17.5px\r\n  height: 17.5px\r\n\r\n  transform: rotate(0deg)\r\n  transition: .5s ease-in-out\r\n  cursor: pointer\r\n\r\n\r\n#nav__mob-icon span\r\n  display: block\r\n  position: absolute\r\n  height: 3.5px\r\n  width: 100%\r\n  background: $white\r\n  opacity: 1\r\n  left: 0\r\n  transform: rotate(0deg)\r\n  transition: .25s ease-in-out\r\n\r\n#nav__mob-icon span:nth-child(1)\r\n  top: 0\r\n\r\n#nav__mob-icon span:nth-child(2),#nav__mob-icon span:nth-child(3)\r\n  top: 6px\r\n\r\n#nav__mob-icon span:nth-child(4)\r\n  top: 12px\r\n\r\n\r\n#nav__mob-icon.open span:nth-child(1)\r\n  top: 18px\r\n  width: 0\r\n  left: 50%\r\n\r\n\r\n#nav__mob-icon.open span:nth-child(2)\r\n\r\n  transform: rotate(45deg)\r\n\r\n\r\n#nav__mob-icon.open span:nth-child(3)\r\n\r\n  transform: rotate(-45deg)\r\n\r\n\r\n#nav__mob-icon.open span:nth-child(4)\r\n  top: 18px\r\n  width: 0\r\n  left: 50%\r\n",".main-wrap\r\n  position: relative\r\n  display: flex\r\n  width: 1240px\r\n  height: 880px\r\n  padding: 20px\r\n  font-size: 1.6rem\r\n  @include media(\"<large\")\r\n    width: 960px\r\n    height: 840px\r\n  @include media(\"<desktop\")\r\n    width: 720px\r\n    height: 700px\r\n  @include media(\"<tablet\")\r\n    width: 100%\r\n    height: 100vh\r\n    overflow: hidden\r\n    justify-content: center\r\n    align-items: center\r\n",".nav-wrap\r\n  position: relative\r\n  display: flex\r\n  flex-flow: column nowrap\r\n  flex-shrink: 0\r\n  width: 400px\r\n  height: 840px\r\n  padding: 39px 39px 38px  39px\r\n  background-color: $webd\r\n  color: $white\r\n  overflow: hidden\r\n  @include media(\"<large\")\r\n    padding: 20px\r\n    height: 800px\r\n    width: 360px\r\n  @include media(\"<desktop\")\r\n    height: 660px\r\n    width: 290px\r\n  @include media(\"<tablet\")\r\n    height: 360px\r\n    width: 280px\r\n\r\n\r\n.gradient-container\r\n  position: absolute\r\n  top: 0\r\n  left: 0\r\n  bottom: 0\r\n  right: 0\r\n  z-index: 1\r\n  background-color: $webd\r\n\r\n.nav-bg-gradient\r\n  position: absolute\r\n  top: 0\r\n  left: 0\r\n  height: 300px\r\n  width: 300px\r\n  transform: scale(0.5)\r\n  animation-name: gradient-grow\r\n  animation-duration: 3s\r\n  animation-fill-mode: forwards\r\n  animation-iteration-count: 1\r\n\r\n.nav-bg-gradient--test\r\n  height: 300px\r\n  width: 300px\r\n  animation: none\r\n  background-image: radial-gradient(circle at center, $webd 43%, transparent 71%)\r\n\r\n@keyframes gradient-grow\r\n  0%\r\n    opacity: 0\r\n    transform: scale(0.5)\r\n  10%\r\n    opacity: 1\r\n  50%\r\n    transform: scale(20)\r\n  100%\r\n    transform: scale(20)\r\n\r\n.nav\r\n  z-index: 2\r\n\r\n.nav__list\r\n  @include resetlist()\r\n  margin: 0 -15px 0 -15px\r\n  list-style: none\r\n  @include media(\"<large\")\r\n    margin: 0 -20px\r\n  @include media(\"<tablet\")\r\n    position: absolute\r\n    opacity: 0\r\n    height: 0\r\n    overflow: hidden\r\n    transition: height $transition\r\n\r\n  &--show\r\n    opacity: 1\r\n    height: 400px\r\n    width: 100%\r\n\r\n\r\n// .nav-el\r\n\r\n.nav__link\r\n  position: relative\r\n  display: block\r\n  padding: 1.52rem 0 1.52rem 1.5rem\r\n  text-decoration: none\r\n  color: $white\r\n  font-size: 2rem\r\n  font-family: \"PT Mono\", serif\r\n  font-weight: 600\r\n  user-select: none\r\n  transition: background-color $transition, font-weight $transition*2\r\n  &:after\r\n    content: \"\"\r\n    position: absolute\r\n    right: 16px\r\n    top: 50%\r\n    width: 10px\r\n    height: 10px\r\n    background-color: $white\r\n    clip-path: polygon(0 33%, 67% 33%, 67% 100%, 100% 100%, 100% 0, 0 0)\r\n    opacity: 0\r\n    transform: translate(-30px, -50%) rotate(45deg)\r\n    transition: transform $transition, opacity $transition\r\n\r\n  &.active\r\n    background-color: rgba(255, 255, 255, 0.15)\r\n    transition: background-color $transition, text-shadow $transition\r\n    &:after\r\n      opacity: 1\r\n      transform: translate(0, -50%) rotate(45deg)\r\n\r\n  &:hover\r\n    background-color: rgba(255, 255, 255, 0.15)\r\n\r\n  @include media(\"<desktop\")\r\n    font-size: 1.6rem\r\n    padding: 1.3rem 0 1.3rem 1.9rem\r\n\r\n.nav__logo\r\n  margin: 3px 0 16px 0\r\n  z-index: 2\r\n  @include media(\"<desktop\")\r\n    margin: 3px 0 11px 0\r\n    svg\r\n      width: 78px\r\n\r\n.nav__mobileBtn\r\n  display: none\r\n  @include media(\"<tablet\")\r\n    position: absolute\r\n    right: 20px\r\n    top: 20px\r\n    display: block\r\n    z-index: 3\r\n    appearance: none\r\n    border: none\r\n    background: none\r\n\r\n\r\n    font-weight: 900\r\n    color: $white\r\n    font-size: 3.0rem\r\n\r\n\r\n","@mixin resetlist\r\n  padding-left: 0\r\n  margin: 0\r\n  list-style: none\r\n\r\n@mixin resetmargin\r\n  margin: 0\r\n  padding: 0\r\n\r\n@mixin resetinteractive\r\n  text-decoration: none\r\n  background: none\r\n  border: none\r\n",".about-me\r\n\r\n\r\n  &__wrap\r\n    margin-top: auto\r\n    z-index: 2\r\n    transition: opacity $transition/2\r\n    pointer-events: all\r\n\r\n    &--hidden\r\n      opacity: 0\r\n      pointer-events: none\r\n\r\n  &__text\r\n    margin-bottom: 1.4rem\r\n    font-size: 1.6rem\r\n    line-height: 2.4rem\r\n    padding-right: 23px\r\n    font-family: \"Roboto\", sans-serif\r\n    font-weight: 400\r\n    color: $white\r\n    @include media(\"<large\")\r\n      margin-bottom: 2.7rem\r\n    @include media(\"<desktop\")\r\n      margin-bottom: 1.9rem\r\n      padding-right: 10px\r\n      font-size: 1.2rem\r\n      line-height: 1.8rem\r\n    @include media(\"<tablet\")\r\n      margin: 0.5rem 0\r\n\r\n\r\n  &__links\r\n    @include resetlist()\r\n    margin: 0 0 0.2rem -1rem\r\n    display: flex\r\n    flex-flow: row wrap\r\n\r\n  &__element\r\n\r\n\r\n\r\n  &__link\r\n    display: flex\r\n    justify-content: center\r\n    align-items: center\r\n    width: 45px\r\n    height: 45px\r\n    margin-right: 5px\r\n    color: $white\r\n\r\n\r\n    svg\r\n      width: 28px\r\n      height: 28px\r\n      fill: $white\r\n      transition: transform $transition\r\n      @include media(\"<tablet\")\r\n        width: 22px\r\n        height: 22px\r\n\r\n    &:hover\r\n      svg\r\n        transform: scale(1.1)\r\n\r\n    &--mail\r\n      padding-bottom: 1px\r\n      svg\r\n        width: 34px\r\n        height: 34px\r\n        @include media(\"<tablet\")\r\n          width: 28px\r\n          height: 28px\r\n\r\n\r\n    @include media(\"<large\")\r\n      span\r\n        font-size: 1.2rem\r\n\r\n  &__copyright\r\n    display: block\r\n    margin-top: 1rem\r\n    opacity: 0.5\r\n    a\r\n      color: $white\r\n    @include media(\"<tablet\")\r\n      margin-top: 0.5rem\r\n\r\n.about-me__face-gif\r\n  margin-left: -25px\r\n  @include media(\"<desktop\")\r\n    width: 80px\r\n    margin-left: -19px\r\n","@keyframes mainShow\r\n  0%\r\n    transform: scale(1) translateX(200%)\r\n  50%\r\n    transform: scale(1.2) translateX(100%)\r\n  100%\r\n    left: unset\r\n    transform: scale(1) translateX(0)\r\n\r\n.main\r\n  display: flex\r\n  margin-left: 2rem\r\n  max-height: 860px\r\n  width: 780px\r\n  background-color: $bg\r\n  overflow: hidden\r\n  @include media(\"<tablet\")\r\n    margin-left: 0\r\n    z-index: 4\r\n    position: absolute\r\n    transform: translateX(200%)\r\n    width: 280px\r\n    height: 360px\r\n\r\n\r\n.main--mobShow\r\n  @include media(\"<tablet\")\r\n    animation-name: mainShow\r\n    animation-delay: 500ms\r\n    animation-duration: 500ms\r\n    animation-iteration-count: 1\r\n    animation-timing-function: linear\r\n    animation-fill-mode: forwards\r\n\r\n\r\n.main__section\r\n  display: flex\r\n  width: 100%\r\n  flex-flow: column nowrap\r\n\r\n\r\n\r\n.main__section-title\r\n  margin: 0 0 27px 0\r\n  @include media(\"<large\")\r\n    margin: 0 0 16px 0\r\n  @include media(\"<desktop\")\r\n    margin: 0 0 13px 0\r\n  @include media(\"<tablet\")\r\n\r\n\r\n\r\n.main__text-wrap\r\n  padding: 3.4rem 4rem 0\r\n  @include media(\"<large\")\r\n    padding-top: 1.8rem\r\n  @include media(\"<desktop\")\r\n    padding: 1.6rem 2rem 0\r\n\r\n\r\n.main__text\r\n  p\r\n    margin: 10px 0\r\n  p + p\r\n    margin-top: 10px\r\n  @include media(\"<desktop\")\r\n  @include media(\"<tablet\")\r\n    display: none\r\n\r\n.main__mobile-goback\r\n  display: none\r\n  @include media(\"<tablet\")\r\n    display: block\r\n    width: 70px\r\n    height: 20px\r\n    margin: 15px 15px 0\r\n    appearance: none\r\n    background: none\r\n    border: none\r\n    cursor: pointer\r\n    svg\r\n\r\n\r\n","@keyframes animateBtnBG\r\n  from\r\n    background-position: 100% 0\r\n  to\r\n    background-position: 0 0\r\n\r\n.sliders-wrap\r\n  position: relative\r\n  margin-top: auto\r\n  width: 100%\r\n  background-color: #E1E1E1\r\n\r\n.main-slider\r\n  z-index: 2\r\n  width: 780px\r\n  height: 540px\r\n  background-color: #E1E1E1\r\n  @include media(\"<large\")\r\n    width: 540px\r\n    height: 450px\r\n  @include media(\"<desktop\")\r\n    width: 370px\r\n    height: 330px\r\n  @include media(\"<tablet\")\r\n    width: 100%\r\n    height: 210px\r\n\r\n\r\n  .swiper-wrapper\r\n    display: flex\r\n    align-items: stretch\r\n\r\n  .swiper-slide\r\n    display: flex\r\n    justify-content: center\r\n    align-items: center\r\n    height: unset\r\n    overflow: hidden\r\n    picture\r\n      width: 100%\r\n      display: flex\r\n      justify-content: center\r\n      object-fit: contain\r\n\r\n      img\r\n        display: block\r\n        object-fit: contain\r\n        @include media(\"<large\")\r\n          //width: 100%\r\n        @include media(\"<desktop\")\r\n          //width: 100%\r\n        @include media(\"<tablet\")\r\n          height: 210px\r\n          width: 100%\r\n\r\n.text-slider\r\n  width: calc(100% - 80px)\r\n  height: 50px\r\n  position: absolute !important\r\n  left: 50%\r\n  top: 4rem\r\n  transform: translateX(-50%)\r\n  z-index: 3 !important\r\n  pointer-events: none !important\r\n  opacity: 0.9\r\n  @include media(\"<large\")\r\n    top: 2.1rem\r\n  @include media(\"<desktop\")\r\n    width: calc(100% - 20px)\r\n    top: 1.1rem\r\n  @include media(\"<tablet\")\r\n    width: 100%\r\n    bottom: 100%\r\n    top: unset\r\n\r\n  .swiper-slide\r\n    padding: 9px 0 7px 16px\r\n    color: $white\r\n    font-family: \"PT Mono\", serif\r\n    font-weight: 600\r\n    user-select: none\r\n    pointer-events: none !important\r\n\r\n    p\r\n      background-color: transparent\r\n      margin: 0\r\n      font-size: 1.4rem\r\n      user-select: none\r\n    p + p\r\n      margin-top: 3px\r\n    @include media(\"<tablet\")\r\n      p\r\n        font-size: 1.1rem\r\n\r\n\r\n\r\n.slider__btn-wrap\r\n  position: absolute\r\n  bottom: 4rem\r\n  left: 50%\r\n  z-index: 3\r\n  transform: translateX(-50%)\r\n  @include media(\"<large\")\r\n    bottom: 2rem\r\n  @include media(\"<desktop\")\r\n    bottom: 1rem\r\n  @include media(\"<tablet\")\r\n\r\n  button\r\n    width: 50px\r\n    height: 50px\r\n    outline: none\r\n    border: none\r\n    cursor: pointer\r\n    opacity: 1\r\n    transition: opacity $transition\r\n    svg\r\n      width: 29px\r\n      margin-top: 2px\r\n      fill: $white\r\n    &:hover\r\n      opacity: 0.8\r\n    @include media(\"<tablet\")\r\n      width: 30px\r\n      height: 30px\r\n      svg\r\n        width: 18px\r\n\r\n  .slider-next\r\n    background-size: 200% 100%\r\n    background-position: 100%\r\n    background-repeat: no-repeat\r\n\r\n  .slider-next--animate\r\n    animation: animateBtnBG\r\n    animation-iteration-count: 1\r\n    background-position: 0\r\n\r\n  button + button\r\n    margin-left: 1rem\r\n\r\n  .swiper-button-disabled\r\n    opacity: 0.3\r\n","/**\n * Swiper 7.0.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2021 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: August 26, 2021\n */\n\n@font-face{font-family:swiper-icons;src:url('data:application/font-woff;charset=utf-8;base64, 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');font-weight:400;font-style:normal}:root{--swiper-theme-color:#007aff}.swiper{margin-left:auto;margin-right:auto;position:relative;overflow:hidden;list-style:none;padding:0;z-index:1}.swiper-vertical>.swiper-wrapper{flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:flex;transition-property:transform;box-sizing:content-box}.swiper-android .swiper-slide,.swiper-wrapper{transform:translate3d(0px,0,0)}.swiper-pointer-events{touch-action:pan-y}.swiper-pointer-events.swiper-vertical{touch-action:pan-x}.swiper-slide{flex-shrink:0;width:100%;height:100%;position:relative;transition-property:transform}.swiper-slide-invisible-blank{visibility:hidden}.swiper-autoheight,.swiper-autoheight .swiper-slide{height:auto}.swiper-autoheight .swiper-wrapper{align-items:flex-start;transition-property:transform,height}.swiper-3d,.swiper-3d.swiper-css-mode .swiper-wrapper{perspective:1200px}.swiper-3d .swiper-cube-shadow,.swiper-3d .swiper-slide,.swiper-3d .swiper-slide-shadow,.swiper-3d .swiper-slide-shadow-bottom,.swiper-3d .swiper-slide-shadow-left,.swiper-3d .swiper-slide-shadow-right,.swiper-3d .swiper-slide-shadow-top,.swiper-3d .swiper-wrapper{transform-style:preserve-3d}.swiper-3d .swiper-slide-shadow,.swiper-3d .swiper-slide-shadow-bottom,.swiper-3d .swiper-slide-shadow-left,.swiper-3d .swiper-slide-shadow-right,.swiper-3d .swiper-slide-shadow-top{position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}.swiper-3d .swiper-slide-shadow{background:rgba(0,0,0,.15)}.swiper-3d .swiper-slide-shadow-left{background-image:linear-gradient(to left,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-3d .swiper-slide-shadow-right{background-image:linear-gradient(to right,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-3d .swiper-slide-shadow-top{background-image:linear-gradient(to top,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-3d .swiper-slide-shadow-bottom{background-image:linear-gradient(to bottom,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-css-mode>.swiper-wrapper{overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.swiper-css-mode>.swiper-wrapper::-webkit-scrollbar{display:none}.swiper-css-mode>.swiper-wrapper>.swiper-slide{scroll-snap-align:start start}.swiper-horizontal.swiper-css-mode>.swiper-wrapper{scroll-snap-type:x mandatory}.swiper-vertical.swiper-css-mode>.swiper-wrapper{scroll-snap-type:y mandatory}.swiper-centered>.swiper-wrapper::before{content:'';flex-shrink:0;order:9999}.swiper-centered.swiper-horizontal>.swiper-wrapper>.swiper-slide:first-child{margin-inline-start:var(--swiper-centered-offset-before)}.swiper-centered.swiper-horizontal>.swiper-wrapper::before{height:100%;min-height:1px;width:var(--swiper-centered-offset-after)}.swiper-centered.swiper-vertical>.swiper-wrapper>.swiper-slide:first-child{margin-block-start:var(--swiper-centered-offset-before)}.swiper-centered.swiper-vertical>.swiper-wrapper::before{width:100%;min-width:1px;height:var(--swiper-centered-offset-after)}.swiper-centered>.swiper-wrapper>.swiper-slide{scroll-snap-align:center center}",":root{--swiper-navigation-size:44px}.swiper-button-next,.swiper-button-prev{position:absolute;top:50%;width:calc(var(--swiper-navigation-size)/ 44 * 27);height:var(--swiper-navigation-size);margin-top:calc(0px - (var(--swiper-navigation-size)/ 2));z-index:10;cursor:pointer;display:flex;align-items:center;justify-content:center;color:var(--swiper-navigation-color,var(--swiper-theme-color))}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-next:after,.swiper-button-prev:after{font-family:swiper-icons;font-size:var(--swiper-navigation-size);text-transform:none!important;letter-spacing:0;text-transform:none;font-variant:initial;line-height:1}.swiper-button-prev,.swiper-rtl .swiper-button-next{left:10px;right:auto}.swiper-button-prev:after,.swiper-rtl .swiper-button-next:after{content:'prev'}.swiper-button-next,.swiper-rtl .swiper-button-prev{right:10px;left:auto}.swiper-button-next:after,.swiper-rtl .swiper-button-prev:after{content:'next'}.swiper-button-lock{display:none}",".swiper-fade.swiper-free-mode .swiper-slide{transition-timing-function:ease-out}.swiper-fade .swiper-slide{pointer-events:none;transition-property:opacity}.swiper-fade .swiper-slide .swiper-slide{pointer-events:none}.swiper-fade .swiper-slide-active,.swiper-fade .swiper-slide-active .swiper-slide-active{pointer-events:auto}"],"names":[],"sourceRoot":""}