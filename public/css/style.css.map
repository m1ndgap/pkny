{"version":3,"file":"css/style.css","mappings":"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","sources":["webpack:///./src/sass/vendor/hamburgers.scss","webpack:///./src/sass/vendor/_base.scss","webpack:///./src/sass/vendor/hamburgers-settings.sass","webpack:///./src/sass/_variables.sass","webpack:///./src/sass/vendor/types/_collapse.scss","webpack:///./src/sass/_fonts.sass","webpack:///./src/sass/_global.sass","webpack:///./src/sass/vendor/_include-media.scss","webpack:///./src/sass/_typography.sass","webpack:///./src/sass/blocks/_wrap.sass","webpack:///./src/sass/blocks/_nav.sass","webpack:///./src/sass/_mixins.sass","webpack:///./src/sass/blocks/_about-me.sass","webpack:///./src/sass/blocks/_main.sass","webpack:///./src/sass/blocks/_slider.sass","webpack:///./node_modules/swiper/swiper.min.css","webpack:///./node_modules/swiper/modules/navigation/navigation.min.css","webpack:///./node_modules/swiper/modules/effect-fade/effect-fade.min.css"],"sourcesContent":["@charset \"UTF-8\";\n/*!\n * Hamburgers\n * @description Tasty CSS-animated hamburgers\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/hamburgers\n * @link https://github.com/jonsuh/hamburgers\n */\n\n// Settings\n// ==================================================\n$hamburger-padding-x           : 15px !default;\n$hamburger-padding-y           : 15px !default;\n$hamburger-layer-width         : 40px !default;\n$hamburger-layer-height        : 4px !default;\n$hamburger-layer-spacing       : 6px !default;\n$hamburger-layer-color         : #000 !default;\n$hamburger-layer-border-radius : 4px !default;\n$hamburger-hover-opacity       : 0.7 !default;\n$hamburger-active-layer-color  : $hamburger-layer-color !default;\n$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;\n\n// To use CSS filters as the hover effect instead of opacity,\n// set $hamburger-hover-use-filter as true and\n// change the value of $hamburger-hover-filter accordingly.\n$hamburger-hover-use-filter   : false !default;\n$hamburger-hover-filter       : opacity(50%) !default;\n$hamburger-active-hover-filter: $hamburger-hover-filter !default;\n\n// Types (Remove or comment out what you donâ€™t need)\n// ==================================================\n$hamburger-types: (\n  collapse\n) !default;\n\n// Base Hamburger (We need this)\n// ==================================================\n@import \"base\";\n\n// Hamburger types\n// ==================================================\n@import \"types/collapse\";\n\n\n// ==================================================\n// Cooking up additional types:\n//\n// The Sass for each hamburger type should be nested\n// inside an @if directive to check whether or not\n// it exists in $hamburger-types so only the CSS for\n// included types are generated.\n//\n// e.g. hamburgers/types/_new-type.scss\n//\n// @if index($hamburger-types, new-type) {\n//   .hamburger--new-type {\n//     ...\n//   }\n// }\n","// Hamburger\n// ==================================================\n.hamburger {\n  padding: $hamburger-padding-y $hamburger-padding-x;\n  display: inline-block;\n  cursor: pointer;\n\n  transition-property: opacity, filter;\n  transition-duration: 0.15s;\n  transition-timing-function: linear;\n\n  // Normalize (<button>)\n  font: inherit;\n  color: inherit;\n  text-transform: none;\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  overflow: visible;\n\n  &:hover {\n    @if $hamburger-hover-use-filter == true {\n      filter: $hamburger-hover-filter;\n    }\n    @else {\n      opacity: $hamburger-hover-opacity;\n    }\n  }\n\n  &.is-active {\n    &:hover {\n      @if $hamburger-hover-use-filter == true {\n        filter: $hamburger-active-hover-filter;\n      }\n      @else {\n        opacity: $hamburger-active-hover-opacity;\n      }\n    }\n\n    .hamburger-inner,\n    .hamburger-inner::before,\n    .hamburger-inner::after {\n      background-color: $hamburger-active-layer-color;\n    }\n  }\n}\n\n.hamburger-box {\n  width: $hamburger-layer-width;\n  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;\n  display: inline-block;\n  position: relative;\n}\n\n.hamburger-inner {\n  display: block;\n  top: 50%;\n  margin-top: $hamburger-layer-height / -2;\n\n  &,\n  &::before,\n  &::after {\n    width: $hamburger-layer-width;\n    height: $hamburger-layer-height;\n    background-color: $hamburger-layer-color;\n    border-radius: $hamburger-layer-border-radius;\n    position: absolute;\n    transition-property: transform;\n    transition-duration: 0.15s;\n    transition-timing-function: ease;\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    display: block;\n  }\n\n  &::before {\n    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n\n  &::after {\n    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n}\n","$hamburger-padding-x           : 0\n$hamburger-padding-y           : 0\n$hamburger-layer-width         : 25px\n$hamburger-layer-height        : 3px !default\n$hamburger-layer-spacing       : 4px !default\n$hamburger-layer-color         : $white\n$hamburger-layer-border-radius : 0\n$hamburger-hover-opacity       : 1\n$hamburger-active-layer-color  : $hamburger-layer-color\n","$webd: #1BBD5C\n$graphd: #1E9FD7\n$print: #1C43D0\n$branding: #B41DDA\n$ui: #DC186A\n\n$white: #ffffff\n$black: #000000\n$text: #1A1A1A\n$bg: #F5F5F5\n\n$transition: 300ms\n","@if index($hamburger-types, collapse) {\n  /*\n   * Collapse\n   */\n  .hamburger--collapse {\n    .hamburger-inner {\n      top: auto;\n      bottom: 0;\n      transition-duration: 0.13s;\n      transition-delay: 0.13s;\n      transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n\n      &::after {\n        top: ($hamburger-layer-spacing * 2 + $hamburger-layer-height * 2) * -1;\n        transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),\n                    opacity 0.1s linear;\n      }\n\n      &::before {\n        transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),\n                    transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n      }\n    }\n\n    &.is-active {\n      .hamburger-inner {\n        transform: translate3d(0, ($hamburger-layer-spacing + $hamburger-layer-height) * -1, 0) rotate(-45deg);\n        transition-delay: 0.22s;\n        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n\n        &::after {\n          top: 0;\n          opacity: 0;\n          transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333),\n                      opacity 0.1s 0.22s linear;\n        }\n\n        &::before {\n          top: 0;\n          transform: rotate(-90deg);\n          transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333),\n                      transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);\n        }\n      }\n    }\n  }\n}\n","$font_path: 'public/fonts/'\n\n@font-face\n  font-family: 'PT Mono'\n  src: url(\"../fonts/ptmonobold.woff2\") format(\"woff2\"), url(\"../fonts/ptmonobold.woff\") format(\"woff\")\n  font-weight: 600\n  font-style: normal\n\n@font-face\n  font-family: 'PT Mono'\n  src: url(\"../fonts/ptmono.woff2\") format(\"woff2\"), url(\"../fonts/ptmono.woff\") format(\"woff\")\n  font-weight: 400\n  font-style: normal\n\n@font-face\n  font-family: 'Roboto'\n  src: url(\"../fonts/Roboto-Italic.woff2\") format(\"woff2\")\n  font-weight: 400\n  font-style: italic\n\n@font-face\n  font-family: 'Roboto'\n  src: url(\"../fonts/Roboto-Regular.woff2\") format(\"woff2\")\n  font-weight: 400\n  font-style: normal\n","html\n  font-size: 62.5%\n  font-family: \"Roboto\", sans-serif\n  font-weight: 400\n  *\n    box-sizing: border-box\n\n#root\n  height: 100vh\n  display: flex\n  justify-content: center\n  align-items: center\n  @include media(\"<tablet\")\n    height: 90vh\n    height: calc(var(--vh, 1vh) * 97)\n\n.logo\n  margin: 15px\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 321px,\n  'tiny': 400px,\n  'tablet': 720px,\n  'desktop': 960px,\n  'large': 1240px,\n  'huge': 1440px,\n  'huger': 1650px,\n  'xl': 1800px,\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `â‰¥`, `â‰¤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', 'â‰¥', 'â‰¤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', 'â‰¤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".section-title\n  font-family: \"PT Mono\", serif\n  font-size: 4.4rem\n  line-height: 4.4rem\n  color: $black\n  @include media(\"<desktop\")\n    font-size: 3.4rem\n  @include media(\"<tablet\")\n    font-size: 3rem\n    line-height: 3.2rem\n\n.main__text\n  font-size: 1.6rem\n  line-height: 2.4rem\n  @include media(\"<desktop\")\n    font-size: 1.4rem\n    line-height: 1.8rem\n  @include media(\"<tablet\")\n\n\n.italics\n  font-style: italic\n\n",".main-wrap\n  position: relative\n  display: flex\n  width: 1060px\n  height: 588px\n  font-size: 1.6rem\n  @include media(\"<large\")\n    width: 880px\n    height: 488px\n  @include media(\"<desktop\")\n    width: 680px\n    height: 378px\n  @include media(\"<tablet\")\n    width: 100%\n    height: 100vh\n    overflow: hidden\n    justify-content: center\n    align-items: center\n",".nav-wrap\n  position: relative\n  display: flex\n  flex-flow: column nowrap\n  flex-shrink: 0\n  width: 280px\n  height: 588px\n  padding: 3.6rem 4rem 3.2rem 4rem\n  background-color: transparent\n  color: $white\n  overflow: hidden\n  @include media(\"<large\")\n    padding: 3rem 3.3rem 2.6rem 3.3rem\n    height: 488px\n    width: 232px\n  @include media(\"<desktop\")\n    padding: 2.1rem 2.5rem 2.1rem 2.5rem\n    height: 378px\n    width: 180px\n  @include media(\"<tablet\")\n    height: 360px\n    width: 280px\n\n\n.gradient-container\n  position: absolute\n  top: 0\n  left: 0\n  bottom: 0\n  right: 0\n  z-index: 1\n  background-color: transparent\n\n.nav-bg-gradient\n  position: absolute\n  top: 0\n  left: 0\n  height: 300px\n  width: 300px\n  transform: scale(0.5)\n  animation-name: gradient-grow\n  animation-duration: 6s\n  animation-fill-mode: forwards\n  animation-iteration-count: 1\n\n.nav-bg-gradient--test\n  height: 300px\n  width: 300px\n  animation: none\n  background-image: radial-gradient(circle at center, $webd 43%, transparent 71%)\n\n@keyframes gradient-grow\n  0%\n    opacity: 0\n    transform: scale(0.5)\n  10%\n    opacity: 1\n  50%\n    transform: scale(20)\n  100%\n    transform: scale(20)\n\n.nav\n  z-index: 2\n\n.nav__list\n  @include resetlist()\n  margin: 0 -2rem\n  list-style: none\n  @include media(\"<large\")\n    margin: 0 -20px\n  @include media(\"<desktop\")\n    margin: 7px -12px\n  @include media(\"<tablet\")\n    position: absolute\n    opacity: 0\n    height: 0\n    overflow: hidden\n    transition: height $transition\n\n  &--show\n    opacity: 1\n    height: 400px\n    width: 100%\n\n\n// .nav-el\n\n.nav__link\n  position: relative\n  display: block\n  padding: 1.15rem 0 1.15rem 1.5rem\n  text-decoration: none\n  color: $white\n  font-size: 1.5rem\n  font-family: \"PT Mono\", serif\n  font-weight: 600\n  user-select: none\n  transition: background-color $transition, font-weight $transition*2\n  //&:after\n    content: \"\"\n    position: absolute\n    right: 16px\n    top: 50%\n    width: 10px\n    height: 10px\n    background-color: $white\n    clip-path: polygon(0 33%, 67% 33%, 67% 100%, 100% 100%, 100% 0, 0 0)\n    opacity: 0\n    transform: translate(-30px, -50%) rotate(45deg)\n    transition: transform $transition, opacity $transition\n\n  &.active\n    background-color: rgba(255, 255, 255, 0.15)\n    transition: background-color $transition, text-shadow $transition\n    //&:after\n      opacity: 1\n      transform: translate(0, -50%) rotate(45deg)\n\n  &:hover\n    background-color: rgba(255, 255, 255, 0.15)\n  @include media(\"<large\")\n    font-size: 1.3rem\n    padding: 0.9rem 0 0.9rem 1.9rem\n  @include media(\"<desktop\")\n    font-size: 1.1rem\n    padding: 0.5rem 0 0.5rem 1.4rem\n\n.nav__logo\n  margin: 3px 0 16px 0\n  z-index: 2\n  @include media(\"<large\")\n    margin: 0 0 11px 0\n    svg\n      width: 65px\n  @include media(\"<desktop\")\n    margin: 0\n    height: 25px\n    svg\n      width: 56px\n\n.nav__mobileBtn\n  display: none\n  @include media(\"<tablet\")\n    position: absolute\n    right: 20px\n    top: 22px\n    display: block\n    width: 25px\n    height: 22px\n    z-index: 3\n    appearance: none\n    border: none\n    background: none\n    font-weight: 900\n    color: $white\n    font-size: 3.0rem\n    -webkit-tap-highlight-color: transparent\n    &:focus, &:active\n      background: none\n      outline: none\n      border: none\n      appearance: none\n\n\n","@mixin resetlist\n  padding-left: 0\n  margin: 0\n  list-style: none\n\n@mixin resetmargin\n  margin: 0\n  padding: 0\n\n@mixin resetinteractive\n  text-decoration: none\n  background: none\n  border: none\n",".about-me\n\n  &__wrap\n    margin-top: auto\n    z-index: 2\n    transition: opacity $transition/2\n    pointer-events: all\n\n    &--hidden\n      opacity: 0\n      pointer-events: none\n\n  &__text\n    margin: 0 -2rem 1.4rem 0\n    font-size: 1.1rem\n    line-height: 1.8rem\n    padding-right: 23px\n    font-family: \"Roboto\", sans-serif\n    font-weight: 400\n    color: $white\n    @include media(\"<large\")\n      margin-bottom: 1rem\n      font-size: 1rem\n      line-height: 1.6rem\n    @include media(\"<desktop\")\n      margin-bottom: 1.9rem\n      padding-right: 10px\n      font-size: 1.2rem\n      line-height: 1.8rem\n    @include media(\"<tablet\")\n      margin: 0.5rem 0\n\n  &__text-br\n    @include media(\"<large\")\n      display: none\n\n  &__links\n    @include resetlist()\n    margin: 0 0 0.2rem 0rem\n    display: flex\n    flex-flow: row wrap\n    flex-shrink: 0\n    @include media(\"<large\")\n      margin-left: -0.6rem\n\n  &__element\n    flex-shrink: 0\n\n\n  &__link\n    display: flex\n    justify-content: center\n    align-items: center\n    width: 28px\n    height: 28px\n    margin-right: 10px\n    color: $white\n    @include media(\"<large\")\n      width: 26px\n      height: 26px\n      span\n        font-size: 1.2rem\n\n\n    svg\n      width: 18px\n      height: 18px\n      fill: $white\n      will-change: transform\n      transition: transform $transition\n      @include media(\"<large\")\n        width: 16px\n        height: 16px\n      @include media(\"<tablet\")\n        width: 22px\n        height: 22px\n\n    &:hover\n      @include media(\">tablet\")\n        svg\n          transform: scale(1.1)\n\n    //&--mail\n    //  padding-bottom: 1px\n    //  svg\n    //    width: 34px\n    //    height: 34px\n    //    @include media(\"<tablet\")\n    //      width: 28px\n    //      height: 28px\n\n\n  &__copyright\n    display: block\n    margin: 1rem -2rem 0 0\n    opacity: 0.5\n    a\n      color: $white\n    @include media(\"<large\")\n      font-size: 1rem\n    @include media(\"<tablet\")\n      margin-top: 0.5rem\n\n\n.about-me__face-gif\n  width: 80px\n  margin-left: -2rem\n  @include media(\"<large\")\n    width: 66px\n    margin: 0 0 3px -15px\n  @include media(\"<desktop\")\n    width: 66px\n    margin-left: -19px\n","@keyframes mainShow\n  0%\n    transform: translateX(200%)\n  50%\n    transform: translateX(100%)\n  100%\n    transform: translateX(0)\n\n@keyframes mainHide\n  0%\n    transform: translateX(0)\n  50%\n    transform: translateX(100%)\n  100%\n    transform: translateX(200%)\n\n.main\n  display: flex\n  max-height: 588px\n  width: 780px\n  background-color: $bg\n  overflow: hidden\n  @include media(\"<tablet\")\n    margin-left: 0\n    z-index: 5\n    position: absolute\n    will-change: transform\n    transform: translateX(200%)\n    width: 280px\n    height: 360px\n\n\n.main--mobShow\n  @include media(\"<tablet\")\n    animation-name: mainShow\n    animation-delay: 300ms\n    animation-duration: 300ms\n    animation-iteration-count: 1\n    animation-timing-function: linear\n    animation-fill-mode: forwards\n\n.main--mobHide\n  @include media(\"<tablet\")\n    animation-name: mainHide\n    animation-delay: 0ms\n    animation-duration: 300ms\n    animation-iteration-count: 1\n    animation-timing-function: linear\n    animation-fill-mode: forwards\n\n\n.main__section\n  display: flex\n  width: 100%\n  flex-flow: column nowrap\n\n\n\n.main__section-title\n  margin: 0 0 27px 0\n  @include media(\"<large\")\n    margin: 0 0 16px 0\n  @include media(\"<desktop\")\n    margin: 0 0 13px 0\n  @include media(\"<tablet\")\n\n\n\n.main__text-wrap\n  padding: 3.4rem 4rem 0\n  @include media(\"<large\")\n    padding-top: 1.8rem\n  @include media(\"<desktop\")\n    padding: 0.5rem 2rem 0\n\n\n.main__text\n  p\n    margin: 10px 0\n  p + p\n    margin-top: 10px\n  @include media(\"<desktop\")\n  @include media(\"<tablet\")\n    display: none\n\n.main__mobile-goback\n  display: none\n  @include media(\"<tablet\")\n    display: block\n    width: 90px\n    height: 20px\n    margin: 30px 15px 2px\n    appearance: none\n    background: none\n    border: none\n    cursor: pointer\n    svg\n\n\n","@keyframes animateBtnBG\n  from\n    background-position: 100% 0\n  to\n    background-position: 0 0\n\n.sliders-wrap\n  position: relative\n  margin-top: auto\n  width: 100%\n  background-color: #E1E1E1\n\n.main-slider\n  z-index: 2\n  width: 780px\n  height: 588px\n  background-color: #E1E1E1\n  @include media(\"<large\")\n    width: 648px\n    height: 488px\n  @include media(\"<desktop\")\n    width: 500px\n    height: 378px\n  @include media(\"<tablet\")\n    width: 100%\n    height: 210px\n\n\n  .swiper-wrapper\n    display: flex\n    align-items: stretch\n\n  .swiper-slide\n    display: flex\n    justify-content: center\n    align-items: center\n    height: unset\n    overflow: hidden\n    picture\n      width: 100%\n      display: flex\n      justify-content: center\n      object-fit: contain\n      img\n        display: block\n        object-fit: contain\n        @include media(\"<large\")\n          //width: 100%\n        @include media(\"<desktop\")\n          //width: 100%\n        @include media(\"<tablet\")\n          height: 210px\n          width: 100%\n\n//.text-slider\n  width: calc(100% - 80px)\n  height: 50px\n  position: absolute !important\n  left: 50%\n  top: 4rem\n  transform: translateX(-50%)\n  z-index: 3 !important\n  pointer-events: none !important\n  opacity: 0.9\n  @include media(\"<large\")\n    top: 2.1rem\n  @include media(\"<desktop\")\n    width: calc(100% - 20px)\n    top: 1.1rem\n  @include media(\"<tablet\")\n    width: 100%\n    bottom: 100%\n    top: unset\n\n  .swiper-slide\n    padding: 9px 0 7px 16px\n    color: $white\n    font-family: \"PT Mono\", serif\n    font-weight: 600\n    user-select: none\n    pointer-events: none !important\n\n    p\n      background-color: transparent\n      margin: 0\n      font-size: 1.4rem\n      user-select: none\n    p + p\n      margin-top: 3px\n    @include media(\"<tablet\")\n      p\n        font-size: 1.1rem\n\n\n\n.slider__btn-wrap\n  position: absolute\n  top: 3rem\n  left: 3rem\n  z-index: 4\n  -webkit-transform: translate3d(0, 0, 0)\n  @include media(\"<large\")\n    top: 2.5rem\n    left: 2.5rem\n  @include media(\"<desktop\")\n    top: 1.5rem\n    left: 1.5rem\n    z-index: 4\n\n\n  button\n    width: 4rem\n    height: 4rem\n    padding: 0\n    outline: none\n    border: none\n    cursor: pointer\n    opacity: 0.9\n    transition: opacity $transition\n    svg\n      width: 29px\n      margin-top: 2px\n      fill: $white\n    &:hover\n      opacity: 0.8\n    @include media(\"<large\")\n      width: 3.2rem\n      height: 3.2rem\n    @include media(\"<desktop\")\n\n    @include media(\"<tablet\")\n      width: 35px\n      height: 35px\n      svg\n        width: 25px\n\n  .slider-next\n    background-size: 200% 100%\n    background-position: 100%\n    background-repeat: no-repeat\n\n  .slider-next--animate\n    animation: animateBtnBG\n    animation-iteration-count: 1\n    background-position: 0\n\n  button + button\n    margin-left: 1rem\n\n  .swiper-button-disabled\n    opacity: 0.3\n","/**\n * Swiper 7.0.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2021 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: August 26, 2021\n */\n\n@font-face{font-family:swiper-icons;src:url('data:application/font-woff;charset=utf-8;base64, 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');font-weight:400;font-style:normal}:root{--swiper-theme-color:#007aff}.swiper{margin-left:auto;margin-right:auto;position:relative;overflow:hidden;list-style:none;padding:0;z-index:1}.swiper-vertical>.swiper-wrapper{flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:flex;transition-property:transform;box-sizing:content-box}.swiper-android .swiper-slide,.swiper-wrapper{transform:translate3d(0px,0,0)}.swiper-pointer-events{touch-action:pan-y}.swiper-pointer-events.swiper-vertical{touch-action:pan-x}.swiper-slide{flex-shrink:0;width:100%;height:100%;position:relative;transition-property:transform}.swiper-slide-invisible-blank{visibility:hidden}.swiper-autoheight,.swiper-autoheight .swiper-slide{height:auto}.swiper-autoheight .swiper-wrapper{align-items:flex-start;transition-property:transform,height}.swiper-3d,.swiper-3d.swiper-css-mode .swiper-wrapper{perspective:1200px}.swiper-3d .swiper-cube-shadow,.swiper-3d .swiper-slide,.swiper-3d .swiper-slide-shadow,.swiper-3d .swiper-slide-shadow-bottom,.swiper-3d .swiper-slide-shadow-left,.swiper-3d .swiper-slide-shadow-right,.swiper-3d .swiper-slide-shadow-top,.swiper-3d .swiper-wrapper{transform-style:preserve-3d}.swiper-3d .swiper-slide-shadow,.swiper-3d .swiper-slide-shadow-bottom,.swiper-3d .swiper-slide-shadow-left,.swiper-3d .swiper-slide-shadow-right,.swiper-3d .swiper-slide-shadow-top{position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}.swiper-3d .swiper-slide-shadow{background:rgba(0,0,0,.15)}.swiper-3d .swiper-slide-shadow-left{background-image:linear-gradient(to left,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-3d .swiper-slide-shadow-right{background-image:linear-gradient(to right,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-3d .swiper-slide-shadow-top{background-image:linear-gradient(to top,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-3d .swiper-slide-shadow-bottom{background-image:linear-gradient(to bottom,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-css-mode>.swiper-wrapper{overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.swiper-css-mode>.swiper-wrapper::-webkit-scrollbar{display:none}.swiper-css-mode>.swiper-wrapper>.swiper-slide{scroll-snap-align:start start}.swiper-horizontal.swiper-css-mode>.swiper-wrapper{scroll-snap-type:x mandatory}.swiper-vertical.swiper-css-mode>.swiper-wrapper{scroll-snap-type:y mandatory}.swiper-centered>.swiper-wrapper::before{content:'';flex-shrink:0;order:9999}.swiper-centered.swiper-horizontal>.swiper-wrapper>.swiper-slide:first-child{margin-inline-start:var(--swiper-centered-offset-before)}.swiper-centered.swiper-horizontal>.swiper-wrapper::before{height:100%;min-height:1px;width:var(--swiper-centered-offset-after)}.swiper-centered.swiper-vertical>.swiper-wrapper>.swiper-slide:first-child{margin-block-start:var(--swiper-centered-offset-before)}.swiper-centered.swiper-vertical>.swiper-wrapper::before{width:100%;min-width:1px;height:var(--swiper-centered-offset-after)}.swiper-centered>.swiper-wrapper>.swiper-slide{scroll-snap-align:center center}",":root{--swiper-navigation-size:44px}.swiper-button-next,.swiper-button-prev{position:absolute;top:50%;width:calc(var(--swiper-navigation-size)/ 44 * 27);height:var(--swiper-navigation-size);margin-top:calc(0px - (var(--swiper-navigation-size)/ 2));z-index:10;cursor:pointer;display:flex;align-items:center;justify-content:center;color:var(--swiper-navigation-color,var(--swiper-theme-color))}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-next:after,.swiper-button-prev:after{font-family:swiper-icons;font-size:var(--swiper-navigation-size);text-transform:none!important;letter-spacing:0;text-transform:none;font-variant:initial;line-height:1}.swiper-button-prev,.swiper-rtl .swiper-button-next{left:10px;right:auto}.swiper-button-prev:after,.swiper-rtl .swiper-button-next:after{content:'prev'}.swiper-button-next,.swiper-rtl .swiper-button-prev{right:10px;left:auto}.swiper-button-next:after,.swiper-rtl .swiper-button-prev:after{content:'next'}.swiper-button-lock{display:none}",".swiper-fade.swiper-free-mode .swiper-slide{transition-timing-function:ease-out}.swiper-fade .swiper-slide{pointer-events:none;transition-property:opacity}.swiper-fade .swiper-slide .swiper-slide{pointer-events:none}.swiper-fade .swiper-slide-active,.swiper-fade .swiper-slide-active .swiper-slide-active{pointer-events:auto}"],"names":[],"sourceRoot":""}